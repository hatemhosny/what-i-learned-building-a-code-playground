{
  "title": "What I Learned Building a Code Playground",
  "description": "",
  "tags": [],
  "activeEditor": "markup",
  "markup": {
    "language": "html",
    "content": "<div class=\"reveal\">\r\n  <div class=\"slides\">\r\n\r\n    <section data-visibility=\"!hidden\" class=\"home\">\r\n      <img\r\n        id=\"home-bg\"\r\n        src=\"https://hatemhosny.github.io/livecodes-assets/assets/169573984565342147902496/lessons-learned-bg.jpg\"\r\n      />\r\n      <h2>What I Learned Building a Code Playground</h2>\r\n      <img\r\n        id=\"think-learn\"\r\n        src=\"https://hatemhosny.github.io/livecodes-assets/assets/169573987598111608420099/lessons-learned.png\"\r\n      />\r\n      <div class=\"author\">Hatem Hosny</div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Agenda\" class=\"align-left\">\r\n      <h2>Agenda</h2>\r\n      <ul>\r\n        <li>Introduction</li>\r\n        <li>Challenges and Decisions\r\n          <ul>\r\n            <li>Web Platform</li>\r\n            <li>Client-Server Interface</li>\r\n            <li>Performance</li>\r\n            <li>Security</li>\r\n          </ul>\r\n        </li>\r\n        <li>Conclusions</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Disclosures\">\r\n      <h2>Disclosures</h2>\r\n      <p class=\"fragment\">I'm a doctor!</p>\r\n      <p class=\"fragment\">... and the author of LiveCodes</p>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"LiveCodes\">\r\n      <h2>LiveCodes</h2>\r\n      <img\r\n        height=\"200\"\r\n        src=\"https://livecodes.io/livecodes/assets/images/livecodes-logo.svg\"\r\n      />\r\n      <p>A Code Playground That Just Works!</p>\r\n      <p>\r\n        <a href=\"https://livecodes.io\" target=\"_blank\">https://livecodes.io</a>\r\n      </p>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"LiveCodes screenshot\">\r\n      <img src=\"https://livecodes.io/docs/img/screenshots/react-template.png\" />\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Language Support\">\r\n      <h2>Language Support</h2>\r\n      <img\r\n        src=\"https://hatemhosny.github.io/livecodes-assets/assets/169573989309196876853454/languages.png\"\r\n      />\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Features\">\r\n      <h2>Features</h2>\r\n      <img\r\n        src=\"https://hatemhosny.github.io/livecodes-assets/assets/169573989962828990321891/features.png\"\r\n      />\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Embedded Playgrounds\" class=\"align-left\">\r\n      <h2>Embedded Playgrounds</h2>\r\n      <ul>\r\n        <li>Can be embedded in any web page</li>\r\n        <li>Powerful SDK\r\n          <ul>\r\n            <li>JavaScript/TypeScript</li>\r\n            <li>React</li>\r\n            <li>Vue</li>\r\n            <li>Svelte</li>\r\n          </ul>\r\n        </li>\r\n        <li>Communicate with embedded playgrounds</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Client-Side\" class=\"align-left\">\r\n      <h2>Client-Side!</h2>\r\n      <ul>\r\n        <li>Yes, all compilers run in the browser!</li>\r\n        <li>No server rounds</li>\r\n        <li>No servers to configure (or pay for!)</li>\r\n        <li>All projects are private by default</li>\r\n        <li>Free with unlimited usage</li>\r\n        <li>Can be self-hosted on any static file server</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Free and Open-Source\" class=\"align-left\">\r\n      <h2>Free and Open-Source</h2>\r\n      <ul>\r\n        <li>MIT License</li>\r\n        <li>No limits for use</li>\r\n        <li>No ads</li>\r\n        <li>No accounts required</li>\r\n      </ul>\r\n      <p>&nbsp;</p>\r\n      <p><a href=\"https://github.com/live-codes/livecodes\" target=\"_blank\">https://github.com/live-codes/livecodes</a></p>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenges\">\r\n      <h2>Challenges</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenge: Run 80+ Languages\">\r\n      <h2>Run 80+ Languages</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: Run 80+ Languages\" class=\"align-left\">\r\n      <h2>Run 80+ Languages</h2>\r\n      <ul>\r\n        <li>Options:\r\n          <ul>\r\n            <li class=\"fragment\">Servers</li>\r\n            <li class=\"fragment\">Web Containers</li>\r\n            <li class=\"fragment\">Use the platform!\r\n              <ul>\r\n                <li class=\"fragment\">JavaScript</li>\r\n                <li class=\"fragment\">WebAssembly (Wasm)</li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [Diagram] Languages\">\r\n      <h2>Languages</h2>\r\n      <div class=\"mermaid fragment\">\r\n        <pre>\r\n          graph LR\r\n              A[/Language A\\n`compiles to JS`/]\r\n              B{{Language B\\n`JS runtime`}}\r\n              C>Language C\\n`Wasm runtime`]\r\n        </pre>\r\n      </div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [Diagram] Create Compilers\">\r\n      <h2>Create Compilers</h2>\r\n      <div class=\"mermaid fragment\">\r\n        <pre>\r\n          graph LR\r\n              comp[Create Compiler] -- Config --> A[/Language A\\n`compiles to JS`/]\r\n              comp -- Config --> B{{Language B\\n`JS runtime`}}\r\n              comp -- Config --> C>Language C\\n`Wasm runtime`]\r\n              A -- \"⌛\" --> fnA(fn A)\r\n              fnA -- code --> Script\r\n              B -- \"⌛\" --> fnB(fn B)\r\n              fnB -- code --> Script\r\n              C -- \"⌛\" --> fnC(fn C)\r\n              fnC -- code --> Script\r\n        </pre>\r\n      </div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [Code] Compiler\" data-markdown>\r\n      <textarea data-template>\r\n        ## Compiler\r\n        ```ts [1|2|8-11|3-5]\r\n        export interface Compiler {\r\n          factory: (config: Config) => CompilerFunction;\r\n          url?: string;\r\n          scripts?: string[],\r\n          // ...\r\n        }\r\n\r\n        export type CompilerFunction = (code: string) => Promise<string>;\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [Code] TS lang specs\" data-markdown>\r\n      <textarea data-template>\r\n        ## Example\r\n        ```ts [1-5|6-8|9-12]\r\n        export const languageA: LanguageSpecs = {\r\n          name: 'language A',\r\n          compiler: {\r\n            factory:\r\n              async (config) => {\r\n                // lazy-load large file\r\n                const langA = await import('./lang-a-compiler.js');\r\n                const compiler = langA.compiler(config);\r\n                return async (code) => {\r\n                  const js = await compiler.compileToJs(code);\r\n                  return js;\r\n                }\r\n              }\r\n          },\r\n          // ...\r\n        };\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [Code] TS lang specs\" data-markdown>\r\n      <textarea data-template>\r\n        ## Example\r\n        ```ts [1-5|6-12]\r\n        export const languageC: LanguageSpecs = {\r\n          name: 'language C',\r\n          compiler: {\r\n            factory:\r\n              async (config) => {\r\n                return async (code) => {\r\n                  const script = `\r\n                  const mod = await import('./wasm-runtime.js');\r\n                  mod.runInWasm(${code}, ${JSON.stringify(config)});\r\n                  `\r\n                  return script;\r\n                }\r\n              }\r\n          },\r\n          // ...\r\n        };\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Languages: [LiveCodes]\">\r\n        <h2>Demo: Python (Pyodide)</h2>\r\n        <div id=\"pyodide-demo\" class=\"livecodes\" data-height=\"70vh\"></div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenge: Importing npm Modules\">\r\n      <h2>Importing npm Modules</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: [LiveCodes]\">\r\n        <h2>Importing <span style=\"text-transform: lowercase\">npm<span> Modules</h2>\r\n        <div id=\"modules-demo\" class=\"livecodes\" data-height=\"70vh\"></div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: error\" class=\"align-left\">\r\n        <h2>Importing <span style=\"text-transform: lowercase\">npm<span> Modules</h2>\r\n        <p><code>import {v4} from \"uuid\"</code></p>\r\n        <div class=\"fragment error\">Uncaught TypeError: Failed to resolve module specifier \"uuid\". Relative references must start with either \"/\", \"./\", or \"../\".</div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: URL\" class=\"align-left\">\r\n        <h2>Importing <span style=\"text-transform: lowercase\">npm<span> Modules</h2>\r\n        <p><code>import {v4} from \"https://jspm.dev/uuid\"</code></p>\r\n        <div class=\"error\" style=\"visibility: hidden\">Uncaught TypeError: Failed to resolve module specifier \"uuid\". Relative references must start with either \"/\", \"./\", or \"../\".</div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: [Code] Import Maps\" data-markdown>\r\n      <textarea data-template>\r\n        ## Import Maps\r\n        ```html [1,7|2-6|9-12]\r\n        <script type=\"importmap\">\r\n        {\r\n          \"imports\": {\r\n            \"uuid\": \"https://jspm.dev/uuid\"\r\n          }\r\n        }\r\n        </script>\r\n\r\n        <script type=\"module\">\r\n          import { v4 } from \"uuid\";\r\n          document.body.innerHTML += v4();\r\n        </script>\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: [Code] Regex\" data-markdown>\r\n      <textarea data-template>\r\n        ## Getting Imports\r\n        ```ts []\r\n        const importsPattern =\r\n          /(import\\s+?(?:(?:(?:[\\w*\\s{},\\$]*)\\s+from\\s+?)|))((?:\".*?\")|(?:'.*?'))([\\s]*?(?:;|$|))/g;\r\n\r\n        const dynamicImportsPattern = /(import\\s*?\\(\\s*?((?:\".*?\")|(?:'.*?'))\\s*?\\))/g;\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Importing npm Modules: [Image] Regex\">\r\n      <img src=\"https://hatemhosny.github.io/livecodes-assets/assets/169584838629216468023216/regex-meme.jpg\" style=\"height: 70vh\">\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenge: App vs. SDK Versions\">\r\n      <h2>App vs. SDK Versions</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"SDK: Demo\">\r\n      <h2>SDK</h2>\r\n      <iframe src=\"https://hatemhosny.github.io/interactive-coding-tutorial/\" \r\n        class=\"demo-iframe\"></iframe>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"SDK: [Code]\" data-markdown>\r\n      <textarea data-template>\r\n        ## SDK\r\n        ```html []\r\n        <div id=\"container\"></div>\r\n\r\n        <script type=\"module\">\r\n        import { createPlayground } from 'https://unpkg.com/livecodes';\r\n\r\n        createPlayground('#container', {\r\n          params: {\r\n            markdown: '# Hello LiveCodes!',\r\n            css: 'h1 {color: dodgerblue;}',\r\n            js: 'console.log(\"Hello, from JS!\");',\r\n            console: 'open',\r\n          },\r\n        });\r\n        </script>\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"SDK: [Code] Permanent URL\" data-markdown>\r\n      <textarea data-template>\r\n        ## Permanent URL\r\n        ```html [4,7]\r\n        <div id=\"container\"></div>\r\n\r\n        <script type=\"module\">\r\n        import { createPlayground } from 'https://unpkg.com/livecodes@0.2.0';\r\n\r\n        createPlayground('#container', {\r\n          appUrl: 'https://v14.livecodes.io',\r\n          params: {\r\n            markdown: '# Hello LiveCodes!',\r\n            css: 'h1 {color: dodgerblue;}',\r\n            js: 'console.log(\"Hello, from JS!\");',\r\n            console: 'open',\r\n          },\r\n        });\r\n        </script>\r\n        ```\r\n      </textarea>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"SDK: [Diagram] Automated Releases\">\r\n      <h2>Automated Releases</h2>\r\n      <div class=\"mermaid fragment\">\r\n        <pre>\r\n          graph LR\r\n              release[Release] --> SDK\r\n              SDK -- GH Actions --> npm\r\n              npm --> sdkV[\"livecodes@0.2.0\"]\r\n              sdkV --> CDNs\r\n              SDK -- commits --> notes[CHANGE LOG]\r\n              release --> App\r\n              App -- commits --> notes\r\n              notes --> ghRelease[GitHub Release]\r\n              App -- GH Actions --> PR[PR -> main]\r\n              PR -- CF Pages --> Preview\r\n              Preview -- DNS API --> Subdomain[v14.livecodes.io]\r\n              PR -- merge --> Deploy\r\n              Deploy --> Domain[livecodes.io]\r\n        </pre>\r\n      </div>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenge: Compiler Performance\">\r\n      <h2>Compiler Performance</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Challenge: Security\">\r\n      <h2>Security</h2>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Technology Stack\" class=\"align-left\">\r\n      <h2>Technology Stack</h2>\r\n      <p class=\"fragment\">(a.k.a. Personal Preferences!)</p>\r\n      <ul>\r\n        <li class=\"fragment\">\"Vanilla\" TypeScript</li>\r\n        <li class=\"fragment\">NEVER use classes or <code class=\"inline\">this</code>!</li>\r\n        <li class=\"fragment\">Build system: Esbuild</li>\r\n        <li class=\"fragment\">Testing: Playwright & Jest</li>\r\n        <li class=\"fragment\">Docs: Docusaurus</li>\r\n        <li class=\"fragment\">CI/CD: GitHub Actions</li>\r\n        <li class=\"fragment\">Hosting: Cloudflare Pages</li>\r\n        <li class=\"fragment\">Backend: None :)</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Future\" class=\"align-left\">\r\n      <h2>Future</h2>\r\n      <ul>\r\n        <li class=\"fragment\">Offline!</li>\r\n        <li class=\"fragment\">Source control</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"Conclusions\" class=\"align-left\">\r\n      <h2>Conclusions</h2>\r\n      <ul>\r\n        <li class=\"fragment\">Open-Source = ❤️</li>\r\n        <li class=\"fragment\">Keep learning and building</li>\r\n      </ul>\r\n    </section>\r\n\r\n    <section data-visibility=\"!hidden\" data-title=\"References\" class=\"align-left\">\r\n      <h2>References</h2>\r\n      <ul class=\"small\">\r\n        <li>https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script/type/importmap</li>\r\n        <li>https://github.com/WICG/import-maps</li>\r\n        <li>https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers</li>\r\n        <li>https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URLs</li>\r\n        <li>https://web.dev/sandboxed-iframes/</li>\r\n      </ul>\r\n    </section>\r\n\r\n  </div>\r\n</div>\r\n"
  },
  "style": {
    "language": "scss",
    "content": ".reveal {\r\n  visibility: hidden;\r\n}\r\n\r\n.align-left {\r\n  text-align: left !important;\r\n}\r\n\r\nh2 {\r\n  margin-top: -1em !important;\r\n  margin-bottom: 1em !important;\r\n  text-transform: capitalize !important;\r\n  font-family: \"Courier New\", Courier, monospace !important;\r\n  text-align: center !important;\r\n}\r\nh2::after {\r\n  content: \"\";\r\n  display: block;\r\n  width: 50%;\r\n  height: 0.2em !important;\r\n  margin: auto;\r\n  background-image: url(https://hatemhosny.github.io/livecodes-assets/assets/169573988532230478220473/underline.png);\r\n  background-repeat: no-repeat;\r\n}\r\ncode.inline {\r\n  background-color: #ddd;\r\n  border: 1px solid #666;\r\n  border-radius: 5px;\r\n  padding: 3px;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.home {\r\n  position: relative;\r\n  padding: 0 !important;\r\n  margin: 0 !important;\r\n\r\n  h2 {\r\n    background: none;\r\n    margin: unset !important;\r\n    text-align: center !important;\r\n\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .author {\r\n    font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\r\n      \"Lucida Sans\", Arial, sans-serif;\r\n    font-size: 2rem;\r\n    text-align: right;\r\n  }\r\n\r\n  #home-bg {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -1;\r\n    opacity: 0.08;\r\n  }\r\n\r\n  #think-learn {\r\n    filter: drop-shadow(5px 5px 4px #333);\r\n  }\r\n}\r\n\r\n.mermaid svg {\r\n  max-width: unset !important;\r\n  max-height: 70vh !important;\r\n}\r\n\r\n.livecodes {\r\n  height: 65vh !important;\r\n  font-size: 40px !important;\r\n  transform: scale(1.2) !important;\r\n  margin-left: 10%;\r\n  max-width: 80%;\r\n\r\n  iframe {\r\n    max-width: 100%;\r\n    max-height: max-content;\r\n    transform: scale(1) !important;\r\n  }\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  background-color: rgb(255, 229, 229);\r\n}\r\n\r\n.small {\r\n  font-size: 0.6em !important;\r\n}\r\n\r\n.demo-iframe {\r\n  height: 65vh;\r\n  width: 80%;\r\n  transform: scale(1.2);\r\n  border: 0;\r\n  overflow: hidden !important;\r\n}\r\n"
  },
  "script": {
    "language": "javascript",
    "content": "import Reveal from \"reveal.js@4.6.1\";\r\nimport Markdown from \"reveal.js@4.6.1/plugin/markdown/markdown.esm.js\";\r\nimport Mermaid from 'reveal.js-mermaid-plugin@2.0.0/plugin/mermaid/mermaid.esm.js'\r\nimport Highlight from \"reveal.js@4.6.1/plugin/highlight/highlight.esm.js\";\r\nimport { createPlayground } from 'livecodes@0.2.0'\r\n\r\nimport \"reveal.js@4.6.1/dist/reveal.css\";\r\nimport \"reveal.js@4.6.1/dist/theme/white.css\";\r\nimport \"reveal.js@4.6.1/plugin/highlight/monokai.css\";\r\n\r\n\r\nlet deck = new Reveal({\r\n  plugins: [Markdown, Highlight, Mermaid],\r\n});\r\n\r\ndeck.initialize({\r\n  slideNumber: \"c/t\",\r\n  transition: \"fade\",\r\n  mermaid: {\r\n    flowchart: {\r\n      htmlLabels: false,\r\n    },\r\n  },\r\n});\r\n\r\ndocument.querySelector('.reveal').style.visibility = 'visible';\r\n\r\nconst liveCodesOptions = {\r\n  appUrl: 'https://v14.livecodes.io',\r\n  loading: 'eager',\r\n}\r\n\r\n// createPlayground('#pyodide-demo', {\r\n//   ...liveCodesOptions,\r\n//   template: 'pyodide',\r\n// })\r\n\r\ncreatePlayground('#modules-demo', {\r\n  ...liveCodesOptions,\r\n  params: {\r\n    'js': `import { v4 } from \"uuid\";\\n\\ndocument.body.innerHTML += v4();`,\r\n  }\r\n})"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "14"
}